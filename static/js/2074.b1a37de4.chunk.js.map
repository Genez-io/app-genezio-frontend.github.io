{"version":3,"file":"static/js/2074.b1a37de4.chunk.js","mappings":"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","sources":["components/Forms/FormWizard/Basicwizard.tsx","components/Forms/FormWizard/Verticalwizard.tsx","components/Forms/FormWizard/Formvalidationwizard.tsx","components/Forms/FormWizard/FormWizard.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Col, Form, FormGroup, InputGroup, Row, Table,Card } from \"react-bootstrap\";\r\n\r\n\r\n\r\n\r\n//Basic start\r\nconst Wizard = ({ step: currentIndex, ...props }:any) => {\r\n  const steps:any = React.Children.toArray(props.children);\r\n  const prevStep:any = currentIndex !== 0 && steps[currentIndex - 1].props;\r\n  const nextStep:any = currentIndex !== steps.length - 1 && steps[currentIndex + 1].props;\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <nav className=\"btn-group steps basicsteps\">\r\n        {steps.map((step:any, index:any) => (\r\n          <Button\r\n            key={step.props.number}\r\n            onClick={() => props.onChange(index)}\r\n            className={getClsNavBtn(index === currentIndex)}\r\n          >\r\n            <span className=\"number me-2 \">{step.props.number}</span>\r\n            <i>{step.props.title}</i>\r\n          </Button>\r\n        ))}\r\n      </nav>\r\n\r\n      {steps[currentIndex]}\r\n\r\n      <div className=\" p-3 d-flex justify-content-between  \">\r\n        <Button\r\n          visible={prevStep}\r\n          onClick={() => props.onChange(currentIndex - 1)}\r\n          title={prevStep.description}\r\n        >\r\n          Back\r\n        </Button>\r\n        <Button\r\n          visible={nextStep}\r\n          onClick={() => props.onChange(currentIndex + 1)}\r\n          title={nextStep.description}\r\n        >\r\n          Next\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst Step = ({ children }:any) => children;\r\n\r\nfunction getClsNavBtn(active:any) {\r\n  return \"btn\" + (active ? \" active\" : \"\");\r\n}\r\nfunction Button({ visible, ...props }:any) {\r\n  return (\r\n    \r\n      <button\r\n        className={visible ? \"btn btn-primary \" : \"invisible\"}\r\n        {...props}\r\n      />\r\n    \r\n  );\r\n}\r\n\r\nexport class Basicwizard extends React.Component {\r\n  state = { step: 0 };\r\n\r\n  handleStep = (step:any) => {\r\n    this.setState({ step });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Wizard step={this.state.step} onChange={this.handleStep}>\r\n        <Step title=\"Personal Information\" number=\"1\">\r\n          <section className=\"card-body Basicwizard \">\r\n            <FormGroup className=\"control-group form-group\">\r\n              <Form.Label className=\"form-label\">Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                required\r\n                placeholder=\"Name\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"control-group form-group\">\r\n              <Form.Label className=\"form-label\">Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                required\r\n                placeholder=\"Email Address\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"control-group form-group\">\r\n              <Form.Label className=\"form-label\">Phone Number</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                required\r\n                placeholder=\"Number\"\r\n              />\r\n            </FormGroup>\r\n            <div className=\"control-group form-group mb-0\">\r\n              <Form.Label className=\"form-label\">Address</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                required\r\n                placeholder=\"Address\"\r\n              />\r\n            </div>\r\n          </section>\r\n        </Step>\r\n\r\n        <Step title=\"Billing Information\" number=\"2\">\r\n          <section className=\"card-body Basicwizard \">\r\n            <div className=\"table-responsive mg-t-20\">\r\n              <Table className=\"table table-bordered\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Cart Subtotal</td>\r\n                    <td className=\"text-end\">$792.00</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <span>Totals</span>\r\n                    </td>\r\n                    <td className=\"text-end text-muted\">\r\n                      <span>$792.00</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <span>Order Total</span>\r\n                    </td>\r\n                    <td>\r\n                      <h2 className=\"price text-end mb-0\">$792.00</h2>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          </section>\r\n        </Step>\r\n        <Step title=\"Payment Details\" number=\"3\">\r\n          <section className=\"card-body Basicwizard \">\r\n            <FormGroup className=\"form-group\">\r\n              <Form.Label className=\"form-label\">CardHolder Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name1\"\r\n                placeholder=\"First Name\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"form-group\">\r\n              <Form.Label className=\"form-label\">Card number</Form.Label>\r\n              <InputGroup className=\"input-group\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Search for...\"\r\n                />\r\n                <span className=\"input-group-append\">\r\n                  <Button\r\n                    variant=\"\"\r\n                    className=\"btn btn-secondary\"\r\n                    type=\"button\"\r\n                  >\r\n                    <i className=\"fab fa-cc-visa\"></i> &nbsp;{\" \"}\r\n                    <i className=\"fab fa-cc-amex\"></i> &nbsp;\r\n                    <i className=\"fab fa-cc-mastercard\"></i>\r\n                  </Button>\r\n                </span>\r\n              </InputGroup>\r\n            </FormGroup>\r\n            <Row>\r\n              <Col sm={8}>\r\n                <FormGroup className=\"form-group mb-sm-0\">\r\n                  <Form.Label className=\"form-label\">Expiration</Form.Label>\r\n                  <InputGroup className=\"input-group\">\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"MM\"\r\n                      name=\"expiremonth\"\r\n                    />\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"YY\"\r\n                      name=\"expireyear\"\r\n                    />\r\n                  </InputGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm={4}>\r\n                <FormGroup className=\"form-group mb-0\">\r\n                  <Form.Label className=\"form-label\">\r\n                    CVV <i className=\"fa fa-question-circle\"></i>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </section>\r\n        </Step>\r\n      </Wizard>\r\n    );\r\n  }\r\n}\r\n//Basic end\r\n","import React,{useState} from \"react\";\r\nimport { Col, Form, FormGroup, InputGroup, Row, Table,Card,Button } from \"react-bootstrap\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  DropzoneAreaBase\r\n} from \"material-ui-dropzone\";\r\nconst Wizardhor = ({ step: currentIndex, ...props }:any) => {\r\n    const steps:any = React.Children.toArray(props.children);\r\n    const prevStep:any = currentIndex !== 0 && steps[currentIndex - 1].props;\r\n    const nextStep:any =\r\n      currentIndex !== steps.length - 1 && steps[currentIndex + 1].props;\r\n  \r\n    return (\r\n      <div className=\"row border\">\r\n        <nav className=\" steps col-sm-3 bordera\">\r\n          {steps.map((step:any, index:any) => (\r\n            <Buttons\r\n              key={step.props.number}\r\n              onClick={() => props.onChange(index)}\r\n              className={getClsNavBtns(index === currentIndex)}\r\n            >\r\n              <span className=\"number me-2\">{step.props.number}</span>\r\n              <i>{step.props.title}</i>\r\n            </Buttons>\r\n          ))}\r\n        </nav>\r\n  \r\n        {steps[currentIndex]}\r\n        <div className=\"col-sm-3 bordera\"></div>\r\n        <div className=\" p-3 d-flex justify-content-between col-sm-9 \">\r\n          <Buttons\r\n            visible={prevStep}\r\n            onClick={() => props.onChange(currentIndex - 1)}\r\n            title={prevStep.description}\r\n          >\r\n            Back\r\n          </Buttons>\r\n          <Buttons\r\n            visible={nextStep}\r\n            onClick={() => props.onChange(currentIndex + 1)}\r\n            title={nextStep.description}\r\n          >\r\n            Next\r\n          </Buttons>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const Steps = ({ children }:any) => children;\r\n  \r\n  function getClsNavBtns(active:any) {\r\n    return \"btn horwizard\" + (active ? \" active\" : \"\");\r\n  }\r\n  function Buttons({ visible, ...props }:any) {\r\n    return (\r\n      <button className={visible ? \"btn btn-primary \" : \"invisible\"} {...props} />\r\n    );\r\n  }\r\n  const Drop =()=>{\r\n   const [selectedFiles, setselectedFiles] = useState([]);\r\n   function formatBytes(bytes:any, decimals = 2) {\r\n     if (bytes === 0) return \"0 Bytes\";\r\n     const k = 1024;\r\n     const dm = decimals < 0 ? 0 : decimals;\r\n     const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\r\n  \r\n     const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n     return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\r\n   }\r\n   function handleAcceptedFiles(files:any) {\r\n     files.map((file:any) =>\r\n       Object.assign(file, {\r\n         preview: URL.createObjectURL(file),\r\n         formattedSize: formatBytes(file.size),\r\n       })\r\n     );\r\n     setselectedFiles(files);\r\n   }\r\n   return (\r\n     <React.Fragment>\r\n       <Dropzone\r\n         onDrop={(acceptedFiles) => {\r\n           handleAcceptedFiles(acceptedFiles);\r\n         }}\r\n       >\r\n         {({ getRootProps, getInputProps }) => (\r\n           <div className=\"dropzone dz-clickable\">\r\n             <div className=\"dz-message needsclick\" {...getRootProps()}>\r\n               <div className=\"mb-2 mt-5 dropzoneicon \">\r\n                 <i className=\"mdi mdi-apple-mobileme\"></i>\r\n               </div>\r\n               <p style={{color: \"#9393b5\"}}>Drop files here or click to upload.</p>\r\n             </div>\r\n           </div>\r\n         )}\r\n       </Dropzone>\r\n       <div className=\"list-unstyled mb-0\" id=\"file-previews\">\r\n         {selectedFiles.map((f:any, i:any) => {\r\n           return (\r\n             <Card\r\n               className=\"mt-1 mb-0 shadow-none border dz-processing dz-image-preview dz-success dz-complete\"\r\n               key={i + \"-file\"}\r\n             >\r\n               <div className=\"p-2\">\r\n                 <Row className=\"align-items-center\">\r\n                   <Col className=\"col-auto\">\r\n                     <img\r\n                       data-dz-thumbnail=\"\"\r\n                       height=\"80\"\r\n                       className=\"avatar-sm rounded bg-light\"\r\n                       alt={f.name}\r\n                       src={f.preview}\r\n                     />\r\n                   </Col>\r\n                   <Col>\r\n                     <Link to=\"#\" className=\"text-muted font-weight-bold\">\r\n                       {f.name}\r\n                     </Link>\r\n                     <p className=\"mb-0\">\r\n                       <strong>{f.formattedSize}</strong>\r\n                     </p>\r\n                   </Col>\r\n                 </Row>\r\n               </div>\r\n             </Card>\r\n           );\r\n         })}\r\n       </div>\r\n     </React.Fragment>\r\n      \r\n   );\r\n  }\r\n   const Drop1 = () => {\r\n       const [files, setFiles] = useState<any>([]);\r\n  \r\n       const handleAdd = (newFiles:any) => {\r\n         newFiles = newFiles.filter(\r\n           (file:any) => !files.find((f:any) => f.data === file.data)\r\n         );\r\n         setFiles([...files, ...newFiles]);\r\n       };\r\n  \r\n       const handleDelete = (deleted:any) => {\r\n         setFiles(files.filter((f:any) => f !== deleted));\r\n       };\r\n  \r\n       return (\r\n         <DropzoneAreaBase\r\n           fileObjects={files}\r\n           onAdd={handleAdd}\r\n           onDelete={handleDelete}\r\n         />\r\n       );\r\n     }\r\n   \r\n  export class Vertical extends React.Component {\r\n      \r\n    state = { step: 0 };\r\n  \r\n    handleStep = (step:any) => {\r\n      this.setState({ step });\r\n    };\r\n   \r\n  \r\n  \r\n  \r\n    render() {\r\n      return (\r\n        <Wizardhor step={this.state.step} onChange={this.handleStep}>\r\n          <Steps title=\"Personal Information\" number=\"1\">\r\n            <section className=\"card-body col-sm-9\">\r\n              <FormGroup className=\"control-group form-group\">\r\n                <Form.Label className=\"form-label\">Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  placeholder=\"Name\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className=\"control-group form-group\">\r\n                <Form.Label className=\"form-label\">Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  placeholder=\"Email Address\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className=\"control-group form-group\">\r\n                <Form.Label className=\"form-label\">Phone Number</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  placeholder=\"Number\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className=\"control-group form-group mb-2\">\r\n                <Form.Label className=\"form-label\">Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  placeholder=\"Address\"\r\n                />\r\n              </FormGroup>\r\n              <div className=\"mb-2 drop\">\r\n                <Drop />\r\n              </div>\r\n              <div className=\"mb-0 drop1\">\r\n                <Drop1 />\r\n              </div>\r\n            </section>\r\n          </Steps>\r\n  \r\n          <Steps title=\"Billing Information\" number=\"2\">\r\n            <section className=\"card-body col-sm-9\">\r\n              <div className=\"table-responsive mg-t-20\">\r\n                <Table className=\"table table-bordered\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Cart Subtotal</td>\r\n                      <td className=\"text-end\">$792.00</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <span>Totals</span>\r\n                      </td>\r\n                      <td className=\"text-end text-muted\">\r\n                        <span>$792.00</span>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <span>Order Total</span>\r\n                      </td>\r\n                      <td>\r\n                        <h2 className=\"price text-end mb-0\">$792.00</h2>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </section>\r\n          </Steps>\r\n          <Steps title=\"Payment Details\" number=\"3\">\r\n            <section className=\"card-body col-sm-9\">\r\n              <FormGroup className=\"form-group\">\r\n                <Form.Label className=\"form-label\">CardHolder Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"name12\"\r\n                  placeholder=\"First Name\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className=\"form-group\">\r\n                <Form.Label className=\"form-label\">Card number</Form.Label>\r\n                <InputGroup className=\"input-group\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search for...\"\r\n                  />\r\n                  <span className=\"input-group-append\">\r\n                    <Button\r\n                      variant=\"\"\r\n                      className=\"btn btn-secondary\"\r\n                      type=\"button\"\r\n                    >\r\n                      <i className=\"fab fa-cc-visa\"></i> &nbsp;{\" \"}\r\n                      <i className=\"fab fa-cc-amex\"></i> &nbsp;\r\n                      <i className=\"fab fa-cc-mastercard\"></i>\r\n                    </Button>\r\n                  </span>\r\n                </InputGroup>\r\n              </FormGroup>\r\n              <Row>\r\n                <Col sm={8}>\r\n                  <FormGroup className=\"form-group mb-sm-0\">\r\n                    <Form.Label className=\"form-label\">Expiration</Form.Label>\r\n                    <InputGroup className=\"input-group\">\r\n                      <Form.Control\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"MM\"\r\n                        name=\"expiremonth\"\r\n                      />\r\n                      <Form.Control\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"YY\"\r\n                        name=\"expireyear\"\r\n                      />\r\n                    </InputGroup>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col sm={4}>\r\n                  <FormGroup className=\"form-group mb-0\">\r\n                    <Form.Label className=\"form-label\">\r\n                      CVV <i className=\"fa fa-question-circle\"></i>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      required\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </section>\r\n          </Steps>\r\n        </Wizardhor>\r\n      );\r\n    }\r\n  }\r\n","import React,{useState} from \"react\";\r\nimport { Col, Form, FormGroup, InputGroup, Row,Button } from \"react-bootstrap\";\r\nimport validator from \"validator\";\r\n\r\nfunction Name({ nextStep, handleFormData, values }:any){\r\n    const [error, setError] = useState(false);\r\n    const submitFormData = (e:any) => {\r\n      e.preventDefault();\r\n      if (\r\n        validator.isEmpty(values.firstName) ||\r\n        validator.isEmpty(values.lastName)\r\n      ) {\r\n        setError(true);\r\n      } else {\r\n        nextStep();\r\n      }\r\n    };\r\n  \r\n    return (\r\n          <div>\r\n            <Form onSubmit={submitFormData}>\r\n              <Form.Group className=\"\">\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control\r\n                  style={{ border: error ? \"2px solid #6259ca\" : \"\" }}\r\n                  name=\"firstName\"\r\n                  defaultValue={values.firstName}\r\n                  type=\"text\"\r\n                  placeholder=\"First Name\"\r\n                  onChange={handleFormData(\"firstName\")}\r\n                />\r\n                {error ? (\r\n                  <Form.Text style={{ color: \"#6259ca\" }}>\r\n                    This is a required field\r\n                  </Form.Text>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Form.Group>\r\n              <Form.Group className=\"\">\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control\r\n                  style={{ border: error ? \"2px solid #6259ca\" : \"\" }}\r\n                  name=\"lastName\"\r\n                  defaultValue={values.lastName}\r\n                  type=\"text\"\r\n                  placeholder=\"Last Name\"\r\n                  onChange={handleFormData(\"lastName\")}\r\n                />\r\n                {error ? (\r\n                  <Form.Text style={{ color: \"#6259ca\" }}>\r\n                    This is a required field\r\n                  </Form.Text>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Form.Group>\r\n              <Button type=\"submit\" className=\"btn mt-3 btn-primary\">\r\n                Continue\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n    );\r\n   }\r\n   function StepTwo  ({ nextStep, handleFormData, prevStep, values }:any) {\r\n    \r\n   const [error, setError] = useState(false);\r\n  \r\n     \r\n   const submitFormData = (e:any) => {\r\n     e.preventDefault();\r\n  \r\n      \r\n     if (validator.isEmpty(values.age) || validator.isEmpty(values.email)) {\r\n       setError(true);\r\n     } else {\r\n       nextStep();\r\n     }\r\n   };\r\n   return (\r\n     <div>\r\n       <Form onSubmit={submitFormData}>\r\n         <Form.Group className=\"mb-3\">\r\n           <Form.Label>Age</Form.Label>\r\n           <Form.Control\r\n             style={{ border: error ? \"2px solid red\" : \"\" }}\r\n             type=\"number\"\r\n             placeholder=\"Age\"\r\n             onChange={handleFormData(\"age\")}\r\n           />\r\n           {error ? (\r\n             <Form.Text style={{ color: \"red\" }}>\r\n               This is a required field\r\n             </Form.Text>\r\n           ) : (\r\n             \"\"\r\n           )}\r\n         </Form.Group>\r\n         <Form.Group className=\"mb-3\">\r\n           <Form.Label>Email</Form.Label>\r\n           <Form.Control\r\n             style={{ border: error ? \"2px solid red\" : \"\" }}\r\n             type=\"email\"\r\n             placeholder=\"email\"\r\n             onChange={handleFormData(\"email\")}\r\n           />\r\n           {error ? (\r\n             <Form.Text style={{ color: \"red\" }}>\r\n               This is a required field\r\n             </Form.Text>\r\n           ) : (\r\n             \"\"\r\n           )}\r\n         </Form.Group>\r\n         <div>\r\n           <Button className=\"float-start btn btn-primary\" onClick={prevStep}>\r\n             Previous\r\n           </Button>\r\n  \r\n           <Button className=\"float-end btn btn-primary\" type=\"submit\">\r\n             Submit\r\n           </Button>\r\n         </div>\r\n       </Form>\r\n     </div>\r\n   );\r\n  };\r\n   function Final({ nextStep,handleFormData, prevStep, values }:any) {\r\n       const [error, setError] = useState(false);\r\n  \r\n       const submitFormData = (e:any) => {\r\n         e.preventDefault();\r\n  \r\n         if (validator.isEmpty(values.age) || validator.isEmpty(values.email)) {\r\n           setError(true);\r\n         } else {\r\n           nextStep();\r\n         }\r\n       };\r\n     return (\r\n       <div>\r\n         <section>\r\n           <FormGroup className=\"form-group\" onSubmit={submitFormData}>\r\n             <Form.Label className=\"form-label\">CardHolder Name</Form.Label>\r\n             <Form.Control\r\n               style={{ border: error ? \"2px solid red\" : \"\" }}\r\n               type=\"text\"\r\n               placeholder=\"First Name\"\r\n             />\r\n           </FormGroup>\r\n           <FormGroup className=\"form-group\">\r\n             <Form.Label className=\"form-label\">Card number</Form.Label>\r\n             <InputGroup className=\"input-group\">\r\n               <Form.Control\r\n                 type=\"text\"\r\n                 className=\"form-control\"\r\n                 placeholder=\"Search for...\"\r\n               />\r\n               <span className=\"input-group-append\">\r\n                 <Button variant=\"\" className=\"btn btn-secondary\" type=\"button\">\r\n                   <i className=\"fab fa-cc-visa\"></i> &nbsp;{\" \"}\r\n                   <i className=\"fab fa-cc-amex\"></i> &nbsp;\r\n                   <i className=\"fab fa-cc-mastercard\"></i>\r\n                 </Button>\r\n               </span>\r\n             </InputGroup>\r\n           </FormGroup>\r\n           <Row>\r\n             <Col sm={8}>\r\n               <FormGroup className=\"form-group mb-sm-0\">\r\n                 <Form.Label className=\"form-label\">Expiration</Form.Label>\r\n                 <InputGroup className=\"input-group\">\r\n                   <Form.Control\r\n                     type=\"number\"\r\n                     className=\"form-control\"\r\n                     placeholder=\"MM\"\r\n                     name=\"expiremonth\"\r\n                   />\r\n                   <Form.Control\r\n                     type=\"number\"\r\n                     className=\"form-control\"\r\n                     placeholder=\"YY\"\r\n                     name=\"expireyear\"\r\n                   />\r\n                 </InputGroup>\r\n               </FormGroup>\r\n             </Col>\r\n             <Col sm={4}>\r\n               <FormGroup className=\"form-group mb-0\">\r\n                 <Form.Label className=\"form-label\">\r\n                   CVV <i className=\"fa fa-question-circle\"></i>\r\n                 </Form.Label>\r\n                 <Form.Control type=\"number\" className=\"form-control\" required />\r\n               </FormGroup>\r\n             </Col>\r\n           </Row>\r\n         </section>\r\n         <div>\r\n           <Button\r\n             className=\"float-start btn btn-primary mt-2\"\r\n             onClick={prevStep}\r\n           >\r\n             Previous\r\n           </Button>\r\n  \r\n           <Button\r\n             className=\"float-end btn btn-primary mt-2\"\r\n             disabled\r\n             type=\"submit\"\r\n           >\r\n             Submit\r\n           </Button>\r\n         </div>\r\n       </div>\r\n     );\r\n   };\r\n  export function WizardForm() {\r\n  const [step, setstep] = useState(1);\r\n  const [formData, setFormData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    age: \"\",\r\n    email: \"\"\r\n  })\r\n  const nextStep = () => {\r\n    setstep(step + 1);\r\n  };\r\n  const prevStep = () => {\r\n    setstep(step - 1);\r\n  };\r\n  const handleInputData:any = (input:any) => (e:any) => { \r\n    const {value } = e.target;\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [input]: value\r\n  }));\r\n  }\r\n   switch (step) {\r\n    case 1:\r\n      return (\r\n              <div className=\"custom-margin\">\r\n                <Name nextStep={nextStep} handleFormData={handleInputData} values={formData} />\r\n              </div>\r\n      );\r\n     default:\r\n      return (\r\n              <div  className=\"custom-margin\">\r\n                <StepTwo nextStep={nextStep} prevStep={prevStep} handleFormData={handleInputData} values={formData} />\r\n              </div>\r\n      );\r\n    case 3:\r\n      return (\r\n        <div className=\"\">\r\n              <div className=\"custom-margin\">\r\n                <Final values={formData}  />\r\n              </div>\r\n            </div>\r\n      ); \r\n  }\r\n  }\r\n","import React from 'react';\nimport { Breadcrumb, Card, Col, Row } from 'react-bootstrap';\nimport {  Basicwizard  } from './Basicwizard';\nimport {Vertical} from \"./Verticalwizard\"\nimport {WizardForm} from \"./Formvalidationwizard\"\nconst FormWizard = () =>{\n\nreturn (\n  <div>\n    {/* <!-- breadcrumb --> */}\n    <div className=\"breadcrumb-header justify-content-between\">\n      <div className=\"left-content\">\n        <span className=\"main-content-title mg-b-0 mg-b-lg-1\">FORM WIZARD</span>\n      </div>\n      <div className=\"justify-content-center mt-2\">\n        <Breadcrumb className=\"breadcrumb\">\n          <Breadcrumb.Item className=\"breadcrumb-item tx-15\" href=\"#\">\n            Forms\n          </Breadcrumb.Item>\n          <Breadcrumb.Item\n            className=\"breadcrumb-item \"\n            active\n            aria-current=\"page\"\n          >\n            Form Wizard\n          </Breadcrumb.Item>\n        </Breadcrumb>\n      </div>\n    </div>\n    {/* <!-- /breadcrumb --> */}\n\n    {/* <!-- row --> */}\n    <Row>\n      <Col lg={12} md={12}>\n        <Card>\n          <Card.Body>\n            <div className=\"main-content-label mg-b-5\">\n              Basic Content Wizard\n            </div>\n            <p className=\"mg-b-20\">\n              It is Very Easy to Customize and it uses in your website\n              apllication.\n            </p>\n\n            <div id=\"wizard1\" className=\"border\">\n              <Basicwizard  />\n            </div>\n          </Card.Body>\n        </Card>\n      </Col>\n      <Col lg={12} md={12}>\n        <Card>\n          <Card.Body>\n            <div className=\"main-content-label mg-b-5\">\n              Basic Wizard With Validation\n            </div>\n            <p className=\"mg-b-20\">\n              It is Very Easy to Customize and it uses in your website\n              apllication.\n            </p>\n            <div id=\"wizard2\">\n              <WizardForm/>\n              \n            </div>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n    {/* <!-- /row --> */}\n\n    {/* <!-- row --> */}\n    <Row>\n      <Col lg={12} md={12}>\n        <Card>\n          <Card.Body>\n            <div className=\"main-content-label mg-b-5\">\n              Vertical Orientation Wizard\n            </div>\n            <p className=\"mg-b-20\">\n              It is Very Easy to Customize and it uses in your website\n              apllication.\n            </p>\n            <div id=\"wizard3\">\n              <Vertical/>\n            </div>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n    {/* <!-- row closed --> */}\n  </div>\n);};\n\nFormWizard.propTypes = {};\n\nFormWizard.defaultProps = {};\n\nexport default FormWizard;\n"],"names":["Wizard","currentIndex","step","props","steps","React","children","prevStep","nextStep","length","className","map","index","Button","onClick","onChange","active","number","title","visible","description","Step","Basicwizard","state","handleStep","setState","this","FormGroup","Form","type","required","placeholder","Table","id","InputGroup","variant","Row","Col","sm","name","Wizardhor","Buttons","Steps","Drop","useState","selectedFiles","setselectedFiles","formatBytes","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","onDrop","acceptedFiles","files","file","Object","assign","preview","URL","createObjectURL","formattedSize","size","getRootProps","getInputProps","style","color","f","Card","height","alt","src","to","Drop1","setFiles","fileObjects","onAdd","newFiles","filter","find","data","onDelete","deleted","Vertical","Name","handleFormData","values","error","setError","onSubmit","e","preventDefault","validator","firstName","lastName","border","defaultValue","StepTwo","age","email","Final","disabled","WizardForm","setstep","formData","setFormData","handleInputData","input","value","target","prevState","FormWizard","Breadcrumb","href","lg","md","defaultProps"],"sourceRoot":""}